一、bug修复
1、bug分类：
1)业务类：未实现的功能、功能错误
2）崩溃&闪退：
崩溃是程序调用的问题-》从空指针读取值：包括函数，类，变量的空指针；从错误地址上读取值：包括函数，类，变量的错误指针
闪退-》从错误的地址取址；越界：数组越界，访问超过边界的数据；溢出：存储超过边界的数据，递归太深，导致堆栈溢出；
3）性能：
通信时间过长，通信等待超时

2、特殊bug
1）未复现的bug：
通过回滚版本，去重新复现问题环境
2）偶先bug：
找到大概率出现的场景，前后添加日志，去定位可能出现的位置

3、修改步骤
1）理清需求和本次bug的不一致性，判断解决难度或者是否是需要需求同步更改，判断bug不一致的功能点
2）完整找到问题：
正向、反向：通过功能点找到该功能的相关代码逻辑，通过屏蔽、修改等方式，确定该段代码对功能的影响（是否是根本影响，是否是在其他情况下也会出现该问题）
    正向：通过代码逻辑，静态分析，理解代码结构和调用关系
    反向：通过调试和试错验证判断
进一步找到出现问题的原因：特别是出现问题不一定是根因
    发现一个为空指针的调用，问题可能不是调用的错误，而是为啥会出现这个空指针-》是不是前面流程错误导致
    通过查找整个赋值流程，找到可能出现赋值的地方，查看值的变化
    原有的逻辑错误导致
3）测试准备：明确修改的影响；判断通过那些方式可以测试到修改的代码
4）确定方案并修改代码
5）测试和验证
6）将解决思路和问题分析整理，进行汇报
